name: CI/CD Backend
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test-backend-and-sonar:
    name: Tester le backend et analyser avec SonarCloud
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
    - name: Récupérer le code source
      uses: actions/checkout@v4

    - name: Initialisation du JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 17
    
    - name: Mettre en cache les packages Sonar
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Mettre en cache les packages Maven
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build avec Maven
      run: mvn clean install -B -q

    - name: Exécution des tests unitaires et génération du rapport de couverture
      run: mvn test jacoco:report

    - name: Upload du rapport de couverture
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: back/target/site/jacoco
        overwrite: true
    
    - name: Scanner le code avec SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: mvn -B -q verify org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BACK }}
  
  docker_build_and_push:
    name: Build et Push l'image docker du backend
    needs: test-backend-and-sonar
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code source
        uses: actions/checkout@v4
      - name: Initialisation de Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Connexion à Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build et Push l'image docker du backend
        uses: docker/build-push-action@v6.2.0
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest